import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";

const banner =
	`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	plugins: [
		copyStaticFiles(),
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "dist/main.js",
	minify: prod,
	platform: 'node',
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}

function copyStaticFiles() {
	return {
		name: "copy-static-files",
		setup(build) {
			build.onEnd(async () => {
				try {
					fs.cpSync('./manifest.json', './dist/manifest.json');
					fs.cpSync('./styles.css', './dist/styles.css');
				} catch (e) {
					console.error('Failed to copy file:', e);
				}
			});
		}
	}
}
